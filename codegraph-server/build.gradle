buildscript {
    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath libraries.spring.bootGradle
    }
}

plugins {
    id "com.moowork.grunt" version "1.1.1"
    id 'org.unbroken-dome.test-sets' version '1.4.0'
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply from: "$rootDir/gradle/distribution.gradle"

testSets {
    componentTest {
        dirName = 'component-test'
    }
    acceptanceTest {
        dirName = 'acceptance-test'
    }
}

bootRun {
    systemProperties = System.properties
}

springBoot {
    mainClass = 'co.degraph.server.main.CodegraphServer'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
}

configurations {
    all*.exclude group: 'org.slf4j', module: 'slf4j-nop'
}

configurations.create('testPublic')
sourceSets {
    testPublic {
        java {
            srcDir 'src/test-public/java'
        }
        resources {
            srcDir 'src/test-public/resources'
        }
        compileClasspath += sourceSets.main.compileClasspath
        runtimeClasspath += sourceSets.main.runtimeClasspath
    }
    test {
        compileClasspath += testPublic.output
        runtimeClasspath += testPublic.output
    }
    componentTest {
        compileClasspath += testPublic.output
        runtimeClasspath += testPublic.output
    }
    acceptanceTest {
        compileClasspath += testPublic.output
        runtimeClasspath += testPublic.output
    }
}

task testPublicJar(type: Jar, dependsOn: classes) {
    from(sourceSets.testPublic.output)
    classifier 'test-public'
}

artifacts {
    testPublic testPublicJar
}

dependencies {
    compile project(path: ':codegraph-core', configuration: 'compile')
    compile project(':codegraph-db')
    compile libraries.spring.boot
    compile 'org.apache.commons:commons-collections4:4.+'

    testCompile 'org.springframework.boot:spring-boot-starter-test:1.3.6.RELEASE'

    testCompile libraries.unitTesting
    testCompile libraries.neo4jOgmTest
    testCompile project(path: ':codegraph-db', configuration: 'testPublic')

    testPublicCompile libraries.unitTesting

    acceptanceTestCompile project(path: ':codegraph-db', configuration: 'testPublic')
    componentTestCompile project(path: ':codegraph-db', configuration: 'testPublic')
}

node {
    yarnWorkDir = file("$projectDir/src/main/resources/public")
    nodeModulesDir = file("$projectDir/src/main/resources/public")
}

grunt {
    workDir = file("$projectDir/src/main/resources/public")
}

grunt_build.dependsOn yarn_install
build.dependsOn grunt_build
bootRepackage.mustRunAfter grunt_build
groupFiles.dependsOn bootRepackage

build.dependsOn componentTest, acceptanceTest
acceptanceTest.mustRunAfter test
componentTest.mustRunAfter test
